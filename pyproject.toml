[tool.poetry]
name = "fin-streamlit"
version = "0.1.1"
description = "Financial dashboards"
authors = ["jp <plutakuba@gmail.com>"]
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
chardet = "^5.2.0"
pandas = "^2.1.1"
plotly = "^5.17.0"
streamlit = "^1.27.2"
numpy = "^1.26.1"
requests = "^2.31.0"
poetry-dotenv-plugin = "^0.2.0"


[tool.poetry.group.dev.dependencies]
black = "^23.10.0"
pre-commit = "^3.5.0"
pylint = "^3.0.2"
isort = "^5.12.0"
bumpversion = "^0.6.0"
pytest = "^7.4.2"
pytest-cov = "^4.1.0"

[build-system]
requires = ["setuptools<65.5.0", "poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
ignore = ["E501"]
unfixable = ["B"]
[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "F401"]


[tool.ruff.isort]
combine-as-imports = true
force-wrap-aliases = true

[tool.isort]
profile = "black"
line_length = 79
skip_gitignore = true
combine_as_imports = true

[tool.coverage.run]
omit = [
    "fin_streamlit/log.py",
    "fin_streamlit/exc.py"
]

[tool.coverage.report]
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    "@(abc\\.)?abstractmethod",
    ]

ignore_errors = true

